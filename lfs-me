#!/bin/bash

# lfs-me: Linux From Scratch made ( more ) easy. A simple fakeroot based
# package manager for LFS, heavily inspired by Archlinux.
#
# Copyright (C) 2014-2017  Max Bruckner (FSMaxB)
# Copyright (C) 2024 pole bytes <polebyte0x7@gmail.com>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

#force english output
set -e
export LC_ALL=C
user_input=

function arrow_echo()
{
	echo "==> $1"
}

#Cpu Cores for Make jobs
jobs=$(grep "^processor" /proc/cpuinfo | wc -l)

function ask_yes_or_no()
{
	read -p "do you want to continue? y/n: " user_input
	if [[ -z $user_input || "$usr_input" == "y" ]]; then
		echo $user_input
	else 
		echo $user_input
	fi
}

# functions
lfs_me_help() {
	echo -e """
usage: lfs-me <instruction>
instruction:
	-m 		<fakeroot_dir of installed package>,<package_name>,<package_version>,<root_dir>
	-r 		<pkg_name>,<root_dir>
	"""
}


lfs_me_package() {
	#todo: add function that checks if the given package is exists or not

	if [[ ! -d ${chroot_dir%/}/${package_cache_dir} ]]; then
		mkdir -p ${chroot_dir%/}/${package_cache_dir} 
	fi
	
	if find "${chroot_dir%/}/${package_cache_dir}" -name "${package_name}-*" -type f | grep -q .; then
		arrow_echo "package alredy exists -> ${package_name}-${package_version}"
		result=$(ask_yes_or_no)
		if [[ ! "${result}" == "y" && -n "${result}" ]]; then
			exit 1
		fi
	else
		arrow_echo "package doesn't exists"
		arrow_echo "installing..."
	fi

	#create metadata
	cd "$fakeroot_dir"
	find . -type f | grep -ve '^\./FILES$' > "${fakeroot_dir}/FILES"
	find . -type l > "${fakeroot_dir}/LINKS"
	find . -type d > "${fakeroot_dir}/DIRS"

	#remove "." from the beginning of pathnames
	sed -i -e "s/^\\.//" "${fakeroot_dir}/FILES"
	sed -i -e "s/^\\.//" "${fakeroot_dir}/DIRS"
	sed -i -e "s/^\\.//" "${fakeroot_dir}/LINKS"

	#create package
	tar -cf "${temp_dir}/${package_name}-${package_version}.pkg" -I 'xz --threads=0 -c -z -' -C "$fakeroot_dir" .

	#move package to cache dir
	cp "${temp_dir}/${package_name}-${package_version}.pkg" ${chroot_dir%/}/${package_cache_dir}
	arrow_echo "done installing..."

}

#Get a list of every installed file
lfs_me_get_installed_files()
{
	file_name=${chroot_dir%/}/${package_cache_dir}/${package_name}-*
	tar -xf $file_name -C ${temp_dir}
}


#removes a package (doesn't remove it from the index and doesn't run lfs_me_preremove and lfs_me_postremove )
lfs_me_remove_package() {

	if [[ ! -d ${chroot_dir%/}/${package_cache_dir} ]]; then
		mkdir -p ${chroot_dir%/}/${package_cache_dir} 
	fi

	if find "${chroot_dir%/}/${package_cache_dir}" -name "${package_name}-*" -type f | grep -q .; then
		echo "package found!"
	else
		echo "package not found: ${package_name}"
		exit 1
	fi

	arrow_echo "Getting list of installed files"
	lfs_me_get_installed_files

	#deleting files
	arrow_echo "Deleting"
	cd "$temp_dir"

	for file in $( cat "${temp_dir}/FILES" )
	do
		echo "removing file: ${chroot_dir%/}/${file#*/}"
		rm -f "${chroot_dir%/}/${file#*/}"
	done
	for directory in $( sort -r "${temp_dir}/DIRS" )  #Sort in order to remove subdirs first
	do
		echo "removing directory: ${chroot_dir%/}/${directory#*/}"
		if [[ -d ${chroot_dir%/}/${directory#*/} ]]; then
			rmdir --ignore-fail-on-non-empty "${chroot_dir%/}/${directory#*/}"
		else
			arrow_echo "dir not found: ${chroot_dir%/}/${directory}"
		fi
	done
	for link in $( cat "${temp_dir}/LINKS" )
	do
		echo "removing symlink: ${chroot_dir%/}/${link#*/}"
		rm -f "${chroot_dir%/}/${link#*/}"
	done

	
}


#--------------------------------------------------------------------------------

#initialize variables
temp_dir=$(mktemp -d)
package_cache_dir=var/cache/vasishtha
current_dir="$(pwd)"
chroot_dir=

if [[ $# -lt 1 ]]; then
	lfs_me_help
fi

while getopts ":h?m:r:" opt; do
	case "$opt" in
		h|\?)
			lfs_me_help
			exit 0
			;;
		m)
			sub_args=(${OPTARG//,/ })
			fakeroot_dir=${sub_args[0]}
			package_name="${sub_args[1]}"
            		package_version="${sub_args[2]}"
			chroot_dir=${sub_args[3]}

			if [ -z ${chroot_dir} ]; then
				chroot_dir="/"
			fi
			lfs_me_package
			;;
		r)
			sub_args=(${OPTARG//,/ })
			package_name="${sub_args[0]}"
			chroot_dir=${sub_args[1]}

			if [ -z ${chroot_dir} ]; then
				chroot_dir="/"
			fi
			lfs_me_remove_package
			;;
			
	esac
done
